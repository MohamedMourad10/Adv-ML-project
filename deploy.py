# -*- coding: utf-8 -*-
"""deploy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jUobTsKMDtYAps6t_WnMyADAO4z64W8k
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import matplotlib.pyplot as plt

# Load the trained model
model = load_model('brain_tumor_model.h5')  # Update the path
print("Model loaded successfully.")

# Path to the test image
img_path = '/path/to/your/image.jpg'  # Update the path

# Load and display the image
img = image.load_img(img_path, target_size=(150, 150))  # Adjust size to match training input
plt.imshow(img)
plt.axis('off')
plt.title("Test Image")
plt.show()

# Preprocess the image
img_array = image.img_to_array(img)
img_array = np.expand_dims(img_array, axis=0)
img_array = img_array / 255.0  # Rescale

# Predict the class
predictions = model.predict(img_array)
predicted_class = np.argmax(predictions, axis=1)

# Class names
class_names = ['glioma_tumor', 'meningioma_tumor', 'no_tumor', 'pituitary_tumor']

# Print results
print(f"Predicted Class: {class_names[predicted_class[0]]}")

# Display all probabilities
print("Prediction Probabilities:")
for i, prob in enumerate(predictions[0]):
    print(f"{class_names[i]}: {prob:.2f}")
